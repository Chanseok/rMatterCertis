# Cargo 빌드 최적화 설정 (Stable 컴파일러용)
[build]
# lld 링커 사용 (macOS에서 가장 빠른 링커)
rustflags = ["-C", "link-arg=-fuse-ld=lld"]
# 병렬 빌드 최적화
jobs = 8  # CPU 코어 수에 맞게 조정 (Apple Silicon M-series는 보통 8코어+)

# sccache를 사용한 컴파일 캐싱
[env]
RUSTC_WRAPPER = "sccache"
# 더 적극적인 캐싱
SCCACHE_CACHE_SIZE = "10G"
# 추가 성능 최적화
CARGO_INCREMENTAL = "1"
RUST_BACKTRACE = "0"  # 개발 중 백트레이스 비활성화로 속도 향상
# 컴파일 병렬화 최적화
CARGO_BUILD_JOBS = "8"
# Cargo의 내부 작업들 병렬화
CARGO_NET_RETRY = "3"
# 의존성 빌드 최적화
CARGO_TARGET_DIR = "target"
# 추가 링커 속도 최적화 (macOS)
CARGO_TARGET_X86_64_APPLE_DARWIN_LINKER = "clang"
CARGO_TARGET_AARCH64_APPLE_DARWIN_LINKER = "clang"
# 링킹 속도 개선
RUSTFLAGS_X86_64_APPLE_DARWIN = "-C link-arg=-Wl,-no_compact_unwind"
RUSTFLAGS_AARCH64_APPLE_DARWIN = "-C link-arg=-Wl,-no_compact_unwind"

# 병렬 컴파일 최적화
[target.x86_64-apple-darwin]
rustflags = [
    "-C", "link-arg=-fuse-ld=lld",
    "-C", "target-cpu=native",  # 현재 CPU에 최적화
    "-C", "link-arg=-Wl,-no_compact_unwind",  # macOS 전용 최적화
]

[target.aarch64-apple-darwin]
rustflags = [
    "-C", "link-arg=-fuse-ld=lld", 
    "-C", "target-cpu=native",  # Apple Silicon 최적화
    "-C", "link-arg=-Wl,-no_compact_unwind",  # macOS 전용 최적화
]

# 빠른 빌드를 위한 추가 설정
[net]
git-fetch-with-cli = true
