[package]
name = "matter-certis-v2"
version = "0.2.0"
description = "Matter Certis v2 - Modern Event-Driven E-commerce Product Crawling Application"
authors = ["Chanseok <hi007chans@gmail.com>"]
edition = "2024"
rust-version = "1.85"
default-run = "matter-certis-v2"
license = "MIT"
repository = "https://github.com/Chanseok/rMatterCertis"
readme = "README.md"
keywords = ["web-scraping", "crawling", "ecommerce", "automation", "rust"]
categories = ["web-programming", "data-processing", "automation"]

[workspace]
resolver = "2"

# Workspace members for possible future split
# members = ["crates/*"]

[workspace.dependencies]
# Future: shared dependencies can be defined here

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# The `_lib` suffix may seem redundant but it is necessary
# to make the lib name unique and wouldn't conflict with the bin name.
# This seems to be only an issue on Windows, see https://github.com/rust-lang/cargo/issues/8519
name = "matter_certis_v2_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

# 임시로 테스트 바이너리들 비활성화 (통합 스키마 기반 코드 완성 후 재활성화 예정)
# [[bin]]
# name = "test_minimal"
# path = "src/bin/test_minimal.rs"
# 
# [[bin]]
# name = "test_existing_database"
# path = "src/bin/test_existing_database.rs"
# 
# [[bin]]
# name = "test_with_utils"
# path = "src/bin/test_with_utils.rs"
# 
# [[bin]]
# name = "test_db_light"
# path = "src/bin/test_db_light.rs"
# 
# [[bin]]
# name = "test_db"
# path = "src/bin/test_db.rs"
# 
# [[bin]]
# name = "test_db_fast"
# path = "src/bin/test_db_fast.rs"
# 
# [[bin]]
# name = "test_session_management"
# path = "src/bin/test_session_management.rs"
# 
# [[bin]]
# name = "test_crawler"
# path = "src/bin/test_crawler.rs"
# [[bin]]
# name = "test_core_functionality"
# path = "src/bin/test_core_functionality.rs"

[[bin]]
name = "phase3_test"
path = "src/bin/phase3_test.rs"

[[bin]]
name = "real_crawling_test_fixed"
path = "src/bin/real_crawling_test_fixed.rs"

[[bin]]
name = "batch_actor_sanity"
path = "src/bin/batch_actor_sanity.rs"

[build-dependencies]
tauri-build = { version = "2", features = [] }

[dependencies]
# 🚀 Tauri v2.0 Core Framework
tauri = { version = "2", features = ["macos-proxy"] }
tauri-plugin-opener = "2"
tauri-plugin-dialog = "2"
tauri-plugin-fs = "2"
tauri-plugin-shell = "2"
tauri-plugin-store = "2"

# 🔧 Serialization & Data Handling
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"

# 🔄 Type Generation for Frontend
ts-rs = { version = "8.0", features = ["chrono-impl", "uuid-impl"] }

# ⚡ Async Runtime & Concurrency
tokio = { version = "1.0", features = ["rt-multi-thread", "macros", "fs", "time", "signal"] }
tokio-util = { version = "0.7", features = ["time", "codec"] }
tokio-stream = "0.1"
futures = "0.3"
async-trait = "0.1"
rayon = "1.7"

# 🌐 HTTP Client & Web Scraping
reqwest = { version = "0.12", features = ["json", "cookies", "gzip", "brotli", "stream"] }
scraper = "0.20"
select = "0.6"
regex = "1.10"
url = "2.5"

# 🗄️ Database & Storage
sqlx = { version = "0.8", features = ["sqlite", "postgres", "runtime-tokio-rustls", "chrono", "migrate", "uuid"] }

# 🔄 Rate Limiting & Control
governor = "0.6"
tower = { version = "0.4", features = ["timeout", "retry"] }

# 📊 Logging & Telemetry
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "chrono", "fmt"] }
tracing-appender = "0.2"
tracing-opentelemetry = "0.22"
once_cell = "1.19"

# 🛠️ Error Handling & Utilities
anyhow = "1.0"
thiserror = "1.0"
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
blake3 = "1.5"

# 📁 Configuration & File System
config = "0.14"
dirs = "5.0"

# 🎯 Development & Testing Utilities
lazy_static = "1.4"
fastrand = "2.0"

[dev-dependencies]
# 🧪 Testing Infrastructure
tempfile = "3.8"
tokio-test = "0.4"
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.4"
rstest = "0.18"

# 🚀 Modern Rust Development Profile (2024)
[profile.dev]
opt-level = 0
debug = 2  # Full debug info for development
split-debuginfo = "packed"
incremental = true  # Enable incremental compilation
codegen-units = 256
overflow-checks = true
debug-assertions = true
panic = "unwind"  # Enable unwinding for better debugging
lto = false
rpath = false

# 📈 Performance Development Profile
[profile.dev-fast]
inherits = "dev"
opt-level = 1
debug = 1
incremental = true
codegen-units = 16
overflow-checks = false
debug-assertions = false

# 🎯 Release Profile (Production)
[profile.release]
opt-level = 3
debug = false
split-debuginfo = "off"
incremental = false
codegen-units = 1
overflow-checks = false
debug-assertions = false
panic = "abort"
lto = "fat"
strip = "symbols"

# 📦 Dependencies optimization for all profiles
[profile.dev.package."*"]
opt-level = 3
debug = false

[profile.dev-fast.package."*"]
opt-level = 3
debug = false

# 🔧 Modern Rust 2024 Features & Lints (강화된 Clippy 규칙)
[lints.rust]
unsafe_code = "forbid"
missing_docs = "allow"  # 일시적으로 allow로 변경
unused_import_braces = "allow"
unused_qualifications = "allow"  # 일시적으로 allow로 변경
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unused_extern_crates = "warn"
unused_results = "allow"  # 일시적으로 allow로 변경

[lints.clippy]
# Core Clippy 규칙 - Modern Rust 2024 스타일 (우선순위 설정)
all = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }

# Modern Rust 2024 엄격한 규칙
complexity = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
style = { level = "warn", priority = -1 }
correctness = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }

# 모듈 구조 관련 규칙
module_inception = "warn"          # mod.rs 사용 방지
wildcard_imports = "warn"          # * import 방지  
explicit_iter_loop = "warn"        # 명시적 반복자 사용
explicit_into_iter_loop = "warn"   # 명시적 into_iter 사용

# Allow some pedantic lints that are too strict for our use case
missing_errors_doc = "allow"
missing_panics_doc = "allow" 
module_name_repetitions = "allow"
too_many_arguments = "allow"        # 의존성 주입 시 필요

# 🎨 Feature Flags for Clean Architecture
[features]
default = ["modern-ui", "event-driven", "telemetry"]
modern-ui = []           # Modern UI components
event-driven = []        # Event-driven architecture
telemetry = []          # Telemetry and observability
minimal = []            # Minimal build for CI/CD
test-utils = []         # Testing utilities

[[bench]]
name = "shared_service_benchmark"
harness = false

